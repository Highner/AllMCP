@model AllMCPSolution.Controllers.WineImportPageViewModel
@using AllMCPSolution.Controllers
@using AllMCPSolution.Services
@using AllMCPSolution.Models
@using System.Linq
@using System.Globalization
@{
    Layout = null;
    var pageModel = Model ?? new WineImportPageViewModel();
    var winePanel = pageModel.WineUpload ?? new WineImportPanelViewModel();
    var bottlePanel = pageModel.BottleUpload ?? new WineImportPanelViewModel();
    var currentPath = Context.Request.Path.Value ?? string.Empty;
    var topBarModel = ViewData["WineSurferTopBarModel"] as WineSurferTopBarModel
        ?? WineSurferTopBarModel.Empty(currentPath);
    var inventoryAddModalModel = ViewData["InventoryAddModal"] as InventoryAddModalViewModel
        ?? new InventoryAddModalViewModel();
    var wineHasErrors = winePanel.HasErrors;
    var wineHasResult = winePanel.HasResult;
    var wineResult = winePanel.Result;
    var bottleHasErrors = bottlePanel.HasErrors;
    var bottleHasResult = bottlePanel.HasResult;
    var bottleResult = bottlePanel.Result;
    var bottlePreviewRows = bottlePanel.PreviewRows;
    var readyBottleCount = bottlePreviewRows.Count(row => !row.WineExists);
    var hasReadyBottles = readyBottleCount > 0;
    var inventoryReadyCount = bottlePreviewRows.Count(row => row.CanCreateInventory);
    var hasInventoryReady = inventoryReadyCount > 0;
    var hasBottlePreview = bottlePanel.HasPreview;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Import Wines</title>
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon.png" />
    <link rel="manifest" href="/manifest.json" />
    <meta name="theme-color" content="#050505" />
    <link rel="stylesheet" href="/css/wine-surfer-theme.css" />
    <link rel="stylesheet" href="/css/wine-surfer-shadcn.css" />
    <link rel="stylesheet" href="/css/wine-surfer-shared-ui.css" />
    <script defer src="/js/pwa.js"></script>
</head>
<body class="wine-app wine-app--with-bottom-nav">
    @await Html.PartialAsync("_WineSurferTopBar", topBarModel)
    <main class="inventory-shell">
        @await Html.PartialAsync("_WineSurferPageHeader", new WineSurferPageHeaderModel("Import Wines"))
        <section class="wine-surface wine-surface-border wine-card-hover import-panel">
            <h2>Import Wines</h2>
            <form action="/wine-manager/import" method="post" enctype="multipart/form-data" class="wine-import-form">
                @Html.AntiForgeryToken()
                <input type="hidden" name="importType" value="wines" />
                <div class="form-field">
                    <label for="wineFile">Excel File</label>
                    <input type="file" id="wineFile" name="wineFile" accept=".xlsx,.xls" />
                    <p class="field-description">
                        Upload a spreadsheet with columns <strong>Name</strong>, <strong>Country</strong>, <strong>Region</strong>,
                        <strong>Color</strong>, <strong>Appellation</strong>, and <strong>SubAppellation</strong>.
                    </p>
                </div>
                <button type="submit" class="submit-button">Upload and Import Wines</button>
            </form>

            @if (wineHasErrors)
            {
                <div class="import-errors wine-surface wine-surface-border">
                    <h3>Upload Issues</h3>
                    <ul>
                        @foreach (var error in winePanel.Errors)
                        {
                            <li>@error</li>
                        }
                    </ul>
                </div>
            }

            @if (wineHasResult && wineResult is not null)
            {
                <div class="import-summary wine-surface wine-surface-border">
                    <h3>Wine Import Summary@if (!string.IsNullOrWhiteSpace(winePanel.UploadedFileName)) {<text> for @winePanel.UploadedFileName</text>}</h3>
                    <dl class="summary-list">
                        <div><dt>Total rows processed</dt><dd>@wineResult.TotalRows</dd></div>
                        <div><dt>Rows imported</dt><dd>@wineResult.ImportedRows</dd></div>
                        <div><dt>Countries created</dt><dd>@wineResult.CreatedCountries</dd></div>
                        <div><dt>Regions created</dt><dd>@wineResult.CreatedRegions</dd></div>
                        <div><dt>Appellations created</dt><dd>@wineResult.CreatedAppellations</dd></div>
                        <div><dt>Sub-appellations created</dt><dd>@wineResult.CreatedSubAppellations</dd></div>
                        <div><dt>Wines created</dt><dd>@wineResult.CreatedWines</dd></div>
                        <div><dt>Wines updated</dt><dd>@wineResult.UpdatedWines</dd></div>
                    </dl>
                </div>

                @if (wineResult.HasRowErrors)
                {
                    <div class="row-errors wine-surface wine-surface-border">
                        <h3>Rows Skipped</h3>
                        <table class="row-errors__table">
                            <thead>
                                <tr>
                                    <th scope="col">Row</th>
                                    <th scope="col">Issue</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var error in wineResult.RowErrors)
                                {
                                    <tr>
                                        <td>@error.RowNumber</td>
                                        <td>@error.Message</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
            }
        </section>

        <section class="wine-surface wine-surface-border wine-card-hover import-panel">
            <h2>Import Bottles</h2>
            <form action="/wine-manager/import" method="post" enctype="multipart/form-data" class="wine-import-form">
                @Html.AntiForgeryToken()
                <input type="hidden" name="importType" value="bottles" />
                <div class="form-field">
                    <label for="bottleFile">Excel File</label>
                    <input type="file" id="bottleFile" name="bottleFile" accept=".xlsx,.xls" />
                    <p class="field-description">
                        Upload a spreadsheet with columns <strong>Name</strong>, <strong>Country</strong>, <strong>Region</strong>,
                        <strong>Color</strong>, <strong>Appellation</strong>, <strong>SubAppellation</strong>, and <strong>Amount</strong>.
                        Each row will add the specified number of bottles to your inventory.
                    </p>
                </div>
                <button type="submit" class="submit-button">Upload and Import Bottles</button>
            </form>

            <div class="starwinelist-upload">
                <h3>Import from Star Wine List</h3>
                <p class="field-description">
                    Upload a Star Wine List producers page. We will detect the country and region automatically and stage producers for review.
                </p>
                <form action="/wine-manager/import" method="post" enctype="multipart/form-data" class="wine-import-form">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="importType" value="starwinelist" />
                    <div class="form-field">
                        <label for="starListFile">Star Wine List HTML File</label>
                        <input type="file" id="starListFile" name="starListFile" accept=".html,.htm" />
                        <p class="field-description">
                            Upload a Star Wine List producers page. We will extract each producer and appellation into the preview list below.
                        </p>
                    </div>
                    <div class="form-field form-field--static">
                        <label>Detected Country</label>
                        <p class="field-description" aria-live="polite">@(!string.IsNullOrWhiteSpace(bottlePanel.SelectedCountry) ? bottlePanel.SelectedCountry : "—")</p>
                    </div>
                    <div class="form-field form-field--static">
                        <label>Detected Region</label>
                        <p class="field-description" aria-live="polite">@(!string.IsNullOrWhiteSpace(bottlePanel.SelectedRegion) ? bottlePanel.SelectedRegion : "—")</p>
                    </div>
                    <button type="submit" class="submit-button">upload starwinelist</button>
                </form>
            </div>

            <div class="cellartracker-upload">
                <h3>Import from CellarTracker</h3>
                <p class="field-description">
                    Upload a CellarTracker wine list page. We will detect the region and color automatically and stage wines for review.
                </p>
                <form action="/wine-manager/import" method="post" enctype="multipart/form-data" class="wine-import-form">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="importType" value="cellartracker" />
                    <div class="form-field">
                        <label for="cellarTrackerFile">CellarTracker HTML File</label>
                        <input type="file" id="cellarTrackerFile" name="cellarTrackerFile" accept=".html,.htm" />
                        <p class="field-description">
                            Upload a CellarTracker page with wines. We will extract each wine, its appellation, and grape variety into the preview list below.
                        </p>
                    </div>
                    <div class="form-field form-field--static">
                        <label>Detected Region</label>
                        <p class="field-description" aria-live="polite">@(!string.IsNullOrWhiteSpace(bottlePanel.SelectedRegion) ? bottlePanel.SelectedRegion : "—")</p>
                    </div>
                    <div class="form-field form-field--static">
                        <label>Detected Color</label>
                        <p class="field-description" aria-live="polite">@(!string.IsNullOrWhiteSpace(bottlePanel.SelectedColor) ? bottlePanel.SelectedColor : "—")</p>
                    </div>
                    <button type="submit" class="submit-button">Upload CellarTracker</button>
                </form>
            </div>

            @if (bottleHasErrors)
            {
                <div class="import-errors wine-surface wine-surface-border">
                    <h3>Upload Issues</h3>
                    <ul>
                        @foreach (var error in bottlePanel.Errors)
                        {
                            <li>@error</li>
                        }
                    </ul>
                </div>
            }

            @if (hasBottlePreview)
            {
                var previewCount = bottlePreviewRows.Count;
                <div class="import-preview wine-surface wine-surface-border">
                    <div class="import-preview__header">
                        <h3>Bottle Import Preview@if (!string.IsNullOrWhiteSpace(bottlePanel.UploadedFileName)) {<text> for @bottlePanel.UploadedFileName</text>}</h3>
                        <p class="import-preview__description">Review each row and add bottles individually to your inventory.</p>
                        <p class="import-preview__count" aria-live="polite">@previewCount bottle@(previewCount == 1 ? string.Empty : "s") ready to review.</p>
                        <div class="import-preview__bulk-actions">
                            <button type="button"
                                    class="submit-button import-preview__bulk-button"
                                    data-import-preview-import-all
                                    data-ready-count="@readyBottleCount"
                                    aria-disabled="@(hasReadyBottles ? "false" : "true")"
                                @if (!hasReadyBottles)
                                {
                                    <text> disabled</text>
                                }>
                                Import all that do not exist yet
                            </button>
                            <button type="button"
                                    class="submit-button import-preview__bulk-button"
                                    data-import-preview-add-inventory
                                    data-ready-count="@inventoryReadyCount"
                                    aria-disabled="@(hasInventoryReady ? "false" : "true")"
                                @if (!hasInventoryReady)
                                {
                                    <text> disabled</text>
                                }>
                                Add to inventory
                            </button>
                            <p class="import-preview__bulk-status"
                               data-import-preview-bulk-status
                               aria-live="polite"></p>
                            <p class="import-preview__bulk-status"
                               data-import-preview-inventory-status
                               aria-live="polite"></p>
                        </div>
                    </div>
                    <div class="import-preview__table-wrapper">
                        <table class="import-preview__table" data-import-preview-table>
                            <thead>
                                <tr>
                                    <th scope="col">Row</th>
                                    <th scope="col">Wine</th>
                                    <th scope="col">Variety</th>
                                    <th scope="col">Appellation</th>
                                    <th scope="col">Region</th>
                                    <th scope="col">Country</th>
                                    <th scope="col">Color</th>
                                    <th scope="col">Amount</th>
                                    <th scope="col">Bottle Info</th>
                                    <th scope="col">Consumption Date</th>
                                    <th scope="col">Score</th>
                                    <th scope="col">Tasting Note</th>
                                    <th scope="col">Status</th>
                                    <th scope="col" class="import-preview__actions-header">Add</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var row in bottlePreviewRows)
                                {
                                    var displayName = string.IsNullOrWhiteSpace(row.Name) ? "—" : row.Name;
                                    var hasVariety = !string.IsNullOrWhiteSpace(row.GrapeVariety);
                                    var hasAppellation = !string.IsNullOrWhiteSpace(row.Appellation) || !string.IsNullOrWhiteSpace(row.SubAppellation);
                                    var hasRegion = !string.IsNullOrWhiteSpace(row.Region);
                                    var hasCountry = !string.IsNullOrWhiteSpace(row.Country);
                                    var wineCellClass = row.WineExists
                                        ? "import-preview__cell import-preview__cell--wine import-preview__cell--match"
                                        : "import-preview__cell import-preview__cell--wine";
                                    var appellationCellClass = row.AppellationExists
                                        ? "import-preview__cell import-preview__cell--appellation import-preview__cell--match"
                                        : "import-preview__cell import-preview__cell--appellation";
                                    var regionCellClass = row.RegionExists
                                        ? "import-preview__cell import-preview__cell--region import-preview__cell--match"
                                        : "import-preview__cell import-preview__cell--region";
                                    var countryCellClass = row.CountryExists
                                        ? "import-preview__cell import-preview__cell--country import-preview__cell--match"
                                        : "import-preview__cell import-preview__cell--country";
                                    var bottleInfoCellClass = row.HasBottleDetails
                                        ? "import-preview__cell import-preview__cell--bottle-info import-preview__cell--match"
                                        : "import-preview__cell import-preview__cell--bottle-info";
                                    var buttonAriaLabel = string.IsNullOrWhiteSpace(row.Name)
                                        ? "Create wine in catalog"
                                        : $"Create {row.Name} in catalog";
                                    var statusText = row.WineExists ? "Exists" : "Ready";
                                    var statusState = row.WineExists ? "existing" : "ready";
                                    var statusAriaLabel = row.WineExists
                                        ? "Wine already exists in catalog"
                                        : "Wine ready to add to catalog";
                                    var initialState = row.WineExists ? "existing" : "ready";
                                    var canInventoryValue = row.CanCreateInventory ? "true" : "false";
                                    var vintageDataValue = row.Vintage.HasValue
                                        ? row.Vintage.Value.ToString(CultureInfo.InvariantCulture)
                                        : string.Empty;
                                    var amountDataValue = row.Amount.ToString(CultureInfo.InvariantCulture);
                                    var consumptionDateDataValue = row.ConsumptionDate.HasValue
                                        ? row.ConsumptionDate.Value.ToString("yyyy-MM-dd", CultureInfo.InvariantCulture)
                                        : string.Empty;
                                    var consumptionScoreDataValue = row.ConsumptionScore.HasValue
                                        ? row.ConsumptionScore.Value.ToString("0.##", CultureInfo.InvariantCulture)
                                        : string.Empty;
                                    var consumptionNoteDataValue = string.IsNullOrWhiteSpace(row.ConsumptionNote)
                                        ? string.Empty
                                        : row.ConsumptionNote.Replace("\r", " ").Replace("\n", " ");
                                    var isConsumedDataValue = row.IsConsumed ? "true" : "false";
                                    <tr class="import-preview__row"
                                        data-import-preview-row="@row.RowId"
                                        data-import-preview-row-number="@row.RowNumber"
                                        data-import-preview-state="@initialState"
                                        data-import-preview-name="@row.Name"
                                        data-import-preview-country="@row.Country"
                                        data-import-preview-region="@row.Region"
                                        data-import-preview-appellation="@row.Appellation"
                                        data-import-preview-sub-appellation="@row.SubAppellation"
                                        data-import-preview-grape-variety="@row.GrapeVariety"
                                        data-import-preview-color="@row.Color"
                                        data-import-preview-vintage="@vintageDataValue"
                                        data-import-preview-amount="@amountDataValue"
                                        data-import-preview-can-inventory="@canInventoryValue"
                                        data-import-preview-consumed="@isConsumedDataValue"
                                        data-import-preview-consumption-date="@consumptionDateDataValue"
                                        data-import-preview-consumption-score="@consumptionScoreDataValue"
                                        data-import-preview-consumption-note="@consumptionNoteDataValue">
                                        <td class="import-preview__cell import-preview__cell--row">@row.RowNumber</td>
                                        <td class="@wineCellClass">
                                            <span class="import-preview__wine-name">@displayName</span>
                                            @if (row.WineExists)
                                            {
                                                <span class="sr-only">Wine already exists in catalog.</span>
                                            }
                                        </td>
                                        <td class="import-preview__cell import-preview__cell--variety">
                                            @if (hasVariety)
                                            {
                                                <span>@row.GrapeVariety</span>
                                            }
                                            else
                                            {
                                                <span class="import-preview__meta">—</span>
                                            }
                                        </td>
                                        <td class="@appellationCellClass">
                                            @if (hasAppellation)
                                            {
                                                @if (!string.IsNullOrWhiteSpace(row.SubAppellation))
                                                {
                                                    <span>@row.SubAppellation</span>
                                                }
                                                @if (!string.IsNullOrWhiteSpace(row.Appellation))
                                                {
                                                    <span class="import-preview__meta">@row.Appellation</span>
                                                }
                                            }
                                            else
                                            {
                                                <span class="import-preview__meta">—</span>
                                            }
                                            @if (row.AppellationExists)
                                            {
                                                <span class="sr-only">Appellation already exists in catalog.</span>
                                            }
                                        </td>
                                        <td class="@regionCellClass">
                                            @if (hasRegion)
                                            {
                                                <span>@row.Region</span>
                                            }
                                            else
                                            {
                                                <span class="import-preview__meta">—</span>
                                            }
                                            @if (row.RegionExists)
                                            {
                                                <span class="sr-only">Region already exists in catalog.</span>
                                            }
                                        </td>
                                        <td class="@countryCellClass">
                                            @if (hasCountry)
                                            {
                                                <span>@row.Country</span>
                                            }
                                            else
                                            {
                                                <span class="import-preview__meta">—</span>
                                            }
                                            @if (row.CountryExists)
                                            {
                                                <span class="sr-only">Country already exists in catalog.</span>
                                            }
                                        </td>
                                        <td class="import-preview__cell import-preview__cell--color">@(!string.IsNullOrWhiteSpace(row.Color) ? row.Color : "—")</td>
                                        <td class="import-preview__cell import-preview__cell--amount">@row.Amount</td>
                                        <td class="@bottleInfoCellClass">
                                            @{
                                                var vintageValue = row.Vintage;
                                                var hasVintage = vintageValue.HasValue;
                                                var hasQuantity = row.Amount > 0;
                                                var vintageLabel = hasVintage
                                                    ? (vintageValue.Value > 0
                                                        ? vintageValue.Value.ToString(CultureInfo.InvariantCulture)
                                                        : "NV")
                                                    : string.Empty;
                                            }
                                            @if (hasVintage || hasQuantity)
                                            {
                                                if (hasVintage)
                                                {
                                                    <span>@vintageLabel</span>
                                                }

                                                if (hasQuantity)
                                                {
                                                    var bottleWord = row.Amount == 1 ? "bottle" : "bottles";
                                                    <span class="import-preview__meta">@($"{row.Amount} {bottleWord}")</span>
                                                }
                                            }
                                            else
                                            {
                                                <span class="import-preview__meta">—</span>
                                            }
                                        </td>
                                        <td class="import-preview__cell import-preview__cell--consumption-date">
                                            @if (row.ConsumptionDate.HasValue)
                                            {
                                                <span>@row.ConsumptionDate.Value.ToString("d", CultureInfo.CurrentCulture)</span>
                                            }
                                            else
                                            {
                                                <span class="import-preview__meta">—</span>
                                            }
                                        </td>
                                        <td class="import-preview__cell import-preview__cell--consumption-score">
                                            @if (row.ConsumptionScore.HasValue)
                                            {
                                                <span>@row.ConsumptionScore.Value.ToString("0.##", CultureInfo.CurrentCulture)</span>
                                            }
                                            else
                                            {
                                                <span class="import-preview__meta">—</span>
                                            }
                                        </td>
                                        <td class="import-preview__cell import-preview__cell--consumption-note">
                                            @if (!string.IsNullOrWhiteSpace(row.ConsumptionNote))
                                            {
                                                <span>@row.ConsumptionNote</span>
                                            }
                                            else
                                            {
                                                <span class="import-preview__meta">—</span>
                                            }
                                        </td>
                                        <td class="import-preview__cell import-preview__cell--status">
                                            <span class="import-preview__status"
                                                  data-import-preview-status
                                                  data-state="@statusState"
                                                  aria-live="polite"
                                                  aria-label="@statusAriaLabel">@statusText</span>
                                        </td>
                                        <td class="import-preview__cell import-preview__cell--actions">
                                            <button type="button"
                                                    class="crud-table__action-button import-preview__action-button"
                                                    data-add-wine-trigger="import-preview"
                                                    data-preview-row-id="@row.RowId"
                                                    data-wine-name="@row.Name"
                                                    data-wine-country="@row.Country"
                                                    data-wine-region="@row.Region"
                                                    data-wine-appellation="@row.Appellation"
                                                    data-wine-sub-appellation="@row.SubAppellation"
                                                    data-wine-variety="@row.GrapeVariety"
                                                    data-wine-color="@row.Color"
                                                    data-wine-vintage="@vintageDataValue"
                                                    data-import-preview-add
                                                    aria-label="@buttonAriaLabel">Create</button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            }

            @if (bottleHasResult && bottleResult is not null && !hasBottlePreview)
            {
                <div class="import-summary wine-surface wine-surface-border">
                    <h3>Bottle Import Summary@if (!string.IsNullOrWhiteSpace(bottlePanel.UploadedFileName)) {<text> for @bottlePanel.UploadedFileName</text>}</h3>
                    <dl class="summary-list">
                        <div><dt>Total rows processed</dt><dd>@bottleResult.TotalRows</dd></div>
                        <div><dt>Rows imported</dt><dd>@bottleResult.ImportedRows</dd></div>
                        <div><dt>Countries created</dt><dd>@bottleResult.CreatedCountries</dd></div>
                        <div><dt>Regions created</dt><dd>@bottleResult.CreatedRegions</dd></div>
                        <div><dt>Appellations created</dt><dd>@bottleResult.CreatedAppellations</dd></div>
                        <div><dt>Sub-appellations created</dt><dd>@bottleResult.CreatedSubAppellations</dd></div>
                        <div><dt>Wines created</dt><dd>@bottleResult.CreatedWines</dd></div>
                        <div><dt>Wines updated</dt><dd>@bottleResult.UpdatedWines</dd></div>
                        <div><dt>Bottles added</dt><dd>@bottleResult.AddedBottles</dd></div>
                    </dl>
                </div>
            }

            @if (bottleHasResult && bottleResult is not null && bottleResult.HasRowErrors)
            {
                <div class="row-errors wine-surface wine-surface-border">
                    <h3>Rows Skipped</h3>
                    <table class="row-errors__table">
                        <thead>
                            <tr>
                                <th scope="col">Row</th>
                                <th scope="col">Issue</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var error in bottleResult.RowErrors)
                            {
                                <tr>
                                    <td>@error.RowNumber</td>
                                    <td>@error.Message</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </section>
    </main>
    @await Html.PartialAsync("_InventoryAddModal", inventoryAddModalModel)
    <script defer src="/js/inventory-add-modal.js"></script>
    <script defer src="/js/wine-import-preview.js"></script>
    @await Html.PartialAsync("_WineSurferBottomNav", Context?.Request?.Path.Value)
</body>
</html>
