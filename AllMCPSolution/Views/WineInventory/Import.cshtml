@model AllMCPSolution.Controllers.WineImportPageViewModel
@using AllMCPSolution.Controllers
@using AllMCPSolution.Services
@{
    Layout = null;
    var pageModel = Model ?? new WineImportPageViewModel();
    var winePanel = pageModel.WineUpload ?? new WineImportPanelViewModel();
    var bottlePanel = pageModel.BottleUpload ?? new WineImportPanelViewModel();
    var currentPath = Context.Request.Path.Value ?? string.Empty;
    var topBarModel = ViewData["WineSurferTopBarModel"] as WineSurferTopBarModel
        ?? WineSurferTopBarModel.Empty(currentPath);
    var wineHasErrors = winePanel.HasErrors;
    var wineHasResult = winePanel.HasResult;
    var wineResult = winePanel.Result;
    var bottleHasErrors = bottlePanel.HasErrors;
    var bottleHasResult = bottlePanel.HasResult;
    var bottleResult = bottlePanel.Result;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Import Wines</title>
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon.png" />
    <link rel="manifest" href="/manifest.json" />
    <meta name="theme-color" content="#050505" />
    <link rel="stylesheet" href="/css/wine-surfer-theme.css" />
    <link rel="stylesheet" href="/css/wine-surfer-shadcn.css" />
    <script defer src="/js/pwa.js"></script>
</head>
<body class="wine-app wine-app--with-bottom-nav">
    @await Html.PartialAsync("_WineSurferTopBar", topBarModel)
    <main class="inventory-shell">
        @await Html.PartialAsync("_WineSurferPageHeader", new WineSurferPageHeaderModel("Import Wines"))
        <section class="wine-surface wine-surface-border wine-card-hover import-panel">
            <h2>Import Wines</h2>
            <form action="/wine-manager/import" method="post" enctype="multipart/form-data" class="wine-import-form">
                @Html.AntiForgeryToken()
                <input type="hidden" name="importType" value="wines" />
                <div class="form-field">
                    <label for="wineFile">Excel File</label>
                    <input type="file" id="wineFile" name="wineFile" accept=".xlsx,.xls" />
                    <p class="field-description">
                        Upload a spreadsheet with columns <strong>Name</strong>, <strong>Country</strong>, <strong>Region</strong>,
                        <strong>Color</strong>, <strong>Appellation</strong>, and <strong>SubAppellation</strong>.
                    </p>
                </div>
                <button type="submit" class="submit-button">Upload and Import Wines</button>
            </form>

            @if (wineHasErrors)
            {
                <div class="import-errors wine-surface wine-surface-border">
                    <h3>Upload Issues</h3>
                    <ul>
                        @foreach (var error in winePanel.Errors)
                        {
                            <li>@error</li>
                        }
                    </ul>
                </div>
            }

            @if (wineHasResult && wineResult is not null)
            {
                <div class="import-summary wine-surface wine-surface-border">
                    <h3>Wine Import Summary@if (!string.IsNullOrWhiteSpace(winePanel.UploadedFileName)) {<text> for @winePanel.UploadedFileName</text>}</h3>
                    <dl class="summary-list">
                        <div><dt>Total rows processed</dt><dd>@wineResult.TotalRows</dd></div>
                        <div><dt>Rows imported</dt><dd>@wineResult.ImportedRows</dd></div>
                        <div><dt>Countries created</dt><dd>@wineResult.CreatedCountries</dd></div>
                        <div><dt>Regions created</dt><dd>@wineResult.CreatedRegions</dd></div>
                        <div><dt>Appellations created</dt><dd>@wineResult.CreatedAppellations</dd></div>
                        <div><dt>Sub-appellations created</dt><dd>@wineResult.CreatedSubAppellations</dd></div>
                        <div><dt>Wines created</dt><dd>@wineResult.CreatedWines</dd></div>
                        <div><dt>Wines updated</dt><dd>@wineResult.UpdatedWines</dd></div>
                    </dl>
                </div>

                @if (wineResult.HasRowErrors)
                {
                    <div class="row-errors wine-surface wine-surface-border">
                        <h3>Rows Skipped</h3>
                        <table class="row-errors__table">
                            <thead>
                                <tr>
                                    <th scope="col">Row</th>
                                    <th scope="col">Issue</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var error in wineResult.RowErrors)
                                {
                                    <tr>
                                        <td>@error.RowNumber</td>
                                        <td>@error.Message</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
            }
        </section>

        <section class="wine-surface wine-surface-border wine-card-hover import-panel">
            <h2>Import Bottles</h2>
            <form action="/wine-manager/import" method="post" enctype="multipart/form-data" class="wine-import-form">
                @Html.AntiForgeryToken()
                <input type="hidden" name="importType" value="bottles" />
                <div class="form-field">
                    <label for="bottleFile">Excel File</label>
                    <input type="file" id="bottleFile" name="bottleFile" accept=".xlsx,.xls" />
                    <p class="field-description">
                        Upload a spreadsheet with columns <strong>Name</strong>, <strong>Country</strong>, <strong>Region</strong>,
                        <strong>Color</strong>, <strong>Appellation</strong>, <strong>SubAppellation</strong>, and <strong>Amount</strong>.
                        Each row will add the specified number of bottles to your inventory.
                    </p>
                </div>
                <button type="submit" class="submit-button">Upload and Import Bottles</button>
            </form>

            @if (bottleHasErrors)
            {
                <div class="import-errors wine-surface wine-surface-border">
                    <h3>Upload Issues</h3>
                    <ul>
                        @foreach (var error in bottlePanel.Errors)
                        {
                            <li>@error</li>
                        }
                    </ul>
                </div>
            }

            @if (bottleHasResult && bottleResult is not null)
            {
                <div class="import-summary wine-surface wine-surface-border">
                    <h3>Bottle Import Summary@if (!string.IsNullOrWhiteSpace(bottlePanel.UploadedFileName)) {<text> for @bottlePanel.UploadedFileName</text>}</h3>
                    <dl class="summary-list">
                        <div><dt>Total rows processed</dt><dd>@bottleResult.TotalRows</dd></div>
                        <div><dt>Rows imported</dt><dd>@bottleResult.ImportedRows</dd></div>
                        <div><dt>Countries created</dt><dd>@bottleResult.CreatedCountries</dd></div>
                        <div><dt>Regions created</dt><dd>@bottleResult.CreatedRegions</dd></div>
                        <div><dt>Appellations created</dt><dd>@bottleResult.CreatedAppellations</dd></div>
                        <div><dt>Sub-appellations created</dt><dd>@bottleResult.CreatedSubAppellations</dd></div>
                        <div><dt>Wines created</dt><dd>@bottleResult.CreatedWines</dd></div>
                        <div><dt>Wines updated</dt><dd>@bottleResult.UpdatedWines</dd></div>
                        <div><dt>Bottles added</dt><dd>@bottleResult.AddedBottles</dd></div>
                    </dl>
                </div>

                @if (bottleResult.HasRowErrors)
                {
                    <div class="row-errors wine-surface wine-surface-border">
                        <h3>Rows Skipped</h3>
                        <table class="row-errors__table">
                            <thead>
                                <tr>
                                    <th scope="col">Row</th>
                                    <th scope="col">Issue</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var error in bottleResult.RowErrors)
                                {
                                    <tr>
                                        <td>@error.RowNumber</td>
                                        <td>@error.Message</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
            }
        </section>
    </main>
    @await Html.PartialAsync("_WineSurferBottomNav", Context?.Request?.Path.Value)
</body>
</html>
