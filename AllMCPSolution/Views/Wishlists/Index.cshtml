@model AllMCPSolution.Controllers.WishlistsController.WishlistsViewModel
@using AllMCPSolution.Controllers
@using AllMCPSolution.Models
@{
    Layout = null;
    var currentPath = Context?.Request?.Path.Value ?? string.Empty;
    var topBarModel = ViewData["WineSurferTopBarModel"] as WineSurferTopBarModel
        ?? WineSurferTopBarModel.Empty(currentPath);

    var inventoryAddModalModel = ViewData["InventoryAddModal"] as InventoryAddModalViewModel
        ?? new InventoryAddModalViewModel();

    var wishlistHeaderTemplate = new CrudTableHeaderTemplateModel
    {
        ActionLabel = "Add wine",
        ActionCssClass = "wine-surfer-button wishlist-add-trigger",
        ActionAttributes = new Dictionary<string, string?>
        {
            ["data-wishlist-add-trigger"] = string.Empty
        }
    };

    var table = new CrudTableTemplateModel
    {
        Title = string.IsNullOrWhiteSpace(Model.SelectedWishlistName) ? "Wishlist" : Model.SelectedWishlistName,
        DataTableKey = "wishlist-wines",
        HeaderTemplate = wishlistHeaderTemplate,
        BodyContent = @<text>
            <table class="crud-table__table">
                <thead>
                    <tr class="crud-table__header-row">
                        <th class="summary-header summary-header--wine"><span class="header-text">Wine</span></th>
                        <th class="summary-header summary-header--appellation"><span class="header-text">Appellation</span></th>
                        <th class="summary-header summary-header--vintage"><span class="header-text">Vintage</span></th>
                    </tr>
                </thead>
                <tbody>
                @if (Model.Items is { Count: > 0 })
                {
                    foreach (var item in Model.Items)
                    {
                        <tr class="crud-table__row">
                            <td class="summary-cell summary-cell--wine">
                                <a class="link" href="/wine/@item.WineId">@item.WineName</a>
                            </td>
                            <td class="summary-cell summary-cell--appellation">
                                <span class="appellation">@item.Appellation</span>
                                @if (!string.IsNullOrWhiteSpace(item.Region))
                                {
                                    <span class="region"> (@item.Region)</span>
                                }
                            </td>
                            <td class="summary-cell summary-cell--vintage">@item.Vintage</td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="3" class="empty-state">No wines in this wishlist yet.</td>
                    </tr>
                }
                </tbody>
            </table>
        </text>
    };
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Wishlists â€¢ Wine Surfer</title>
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon.png" />
    <link rel="manifest" href="/manifest.json" />
    <meta name="theme-color" content="#050505" />
    <link rel="stylesheet" href="/css/wine-surfer-theme.css" />
    <link rel="stylesheet" href="/css/wine-surfer-shadcn.css" />
    <link rel="stylesheet" href="/css/wine-surfer-shared-ui.css" />
    <script defer src="/js/pwa.js"></script>
    <style>
        :root { color-scheme: dark; }
        body { margin: 0; background: var(--wine-app-background); color: hsl(var(--foreground)); }
        .wishlists-page { min-height: 100vh; }
        .wishlist-select-group { padding: 16px; display: flex; gap: 12px; align-items: center; }
        .wishlist-select-group select { padding: 8px 10px; border-radius: 8px; background: var(--wine-surface-gradient); color: hsl(var(--foreground)); border: 1px solid var(--wine-surface-border); }
    </style>
</head>
<body class="wine-app wine-app--with-bottom-nav">
    <div class="wishlists-page">
        @await Html.PartialAsync("_WineSurferTopBar", topBarModel)

        <div class="wishlist-select-group">
            <label for="wishlistSelect">Wishlist</label>
            <select id="wishlistSelect" onchange="if (this.value) { window.location = '/wine-surfer/wishlists?wishlistId=' + this.value; }">
                @if (Model.Wishlists is { Count: > 0 })
                {
                    foreach (var wl in Model.Wishlists)
                    {
                        var isSelected = Model.SelectedWishlistId.HasValue && wl.Id == Model.SelectedWishlistId.Value;
                        <option value="@wl.Id" selected="@(isSelected ? "selected" : null)">@wl.Name (@wl.WishCount)</option>
                    }
                }
                else
                {
                    <option value="">No wishlists yet</option>
                }
            </select>
            <button type="button" class="wine-surfer-button wine-surfer-button--orange" id="createWishlistBtn">Create wishlist</button>
            @if (Model.SelectedWishlistId.HasValue)
            {
                <button type="button" class="wine-surfer-button" id="renameWishlistBtn">Edit name</button>
                <button type="button" class="wine-surfer-button wine-surfer-button--red" id="deleteWishlistBtn">Delete</button>
            }
        </div>

        @await Html.PartialAsync("_CrudTableTemplate", table)
        @await Html.PartialAsync("_InventoryAddModal", inventoryAddModalModel)
        @await Html.PartialAsync("_WishlistPopover")

        @{ var createModal = new WineSurferModalShell
           {
               BackdropId = "create-wishlist-overlay",
               BackdropCssClass = "wine-surfer-modal-backdrop",
               BackdropAttributes = new Dictionary<string, string?> { ["hidden"] = null, ["aria-hidden"] = "true" },
               DialogId = "create-wishlist-modal",
               DialogCssClass = "wine-surfer-modal",
               DialogAttributes = new Dictionary<string, string?> { ["aria-labelledby"] = "create-wishlist-title" },
               Title = "Create wishlist",
               TitleElementId = "create-wishlist-title",
               BodyContent = @<form id="create-wishlist-form" class="inventory-add-form" novalidate>
                   <label class="inventory-add-field">
                       <span class="inventory-add-label">Name</span>
                       <input type="text" id="create-wishlist-name" maxlength="256" placeholder="e.g. Summer Sippers" aria-label="Wishlist name" required />
                   </label>
                   <p class="inventory-add-error" id="create-wishlist-error" role="alert" aria-hidden="true"></p>
                   <div class="inventory-add-actions">
                       <button type="button" class="crud-table__action-button secondary" data-close-create>Cancel</button>
                       <button type="submit" class="crud-table__action-button">Create</button>
                   </div>
               </form>
           }; }
        @await Html.PartialAsync("_WineSurferModalShell", createModal)

        @{ var renameModal = new WineSurferModalShell
           {
               BackdropId = "rename-wishlist-overlay",
               BackdropCssClass = "wine-surfer-modal-backdrop",
               BackdropAttributes = new Dictionary<string, string?> { ["hidden"] = null, ["aria-hidden"] = "true" },
               DialogId = "rename-wishlist-modal",
               DialogCssClass = "wine-surfer-modal",
               DialogAttributes = new Dictionary<string, string?> { ["aria-labelledby"] = "rename-wishlist-title" },
               Title = "Rename wishlist",
               TitleElementId = "rename-wishlist-title",
               BodyContent = @<form id="rename-wishlist-form" class="inventory-add-form" novalidate>
                   <label class="inventory-add-field">
                       <span class="inventory-add-label">New name</span>
                       <input type="text" id="rename-wishlist-name" maxlength="256" placeholder="e.g. Summer Sippers" aria-label="New wishlist name" required />
                   </label>
                   <p class="inventory-add-error" id="rename-wishlist-error" role="alert" aria-hidden="true"></p>
                   <div class="inventory-add-actions">
                       <button type="button" class="crud-table__action-button secondary" data-close-rename>Cancel</button>
                       <button type="submit" class="crud-table__action-button">Save</button>
                   </div>
               </form>
           }; }
        @await Html.PartialAsync("_WineSurferModalShell", renameModal)

    </div>
    <script defer src="/js/inventory-add-modal.js"></script>
    <script defer src="/js/wishlists.js"></script>
    @await Html.PartialAsync("_WineSurferBottomNav", Context?.Request?.Path.Value)
</body>
</html>
