@model AllMCPSolution.Controllers.WineSurferSipSessionDetailViewModel
@using AllMCPSolution.Controllers
@using AllMCPSolution.Models
@using Microsoft.AspNetCore.Mvc.ViewFeatures
@using System.Collections.Generic
@{
    Layout = null;
}

@functions {
    private static DateTime NormalizeDateTime(DateTime value)
    {
        return value.Kind switch
        {
            DateTimeKind.Utc => value.ToLocalTime(),
            DateTimeKind.Unspecified => DateTime.SpecifyKind(value, DateTimeKind.Local),
            _ => value
        };
    }

    private static DateTime? NormalizeDateTime(DateTime? value)
    {
        return value.HasValue ? NormalizeDateTime(value.Value) : (DateTime?)null;
    }

    private static string FormatSipSessionSchedule(WineSurferSipSessionSummary session)
    {
        var localDateTime = NormalizeDateTime(session.ScheduledAtUtc);
        if (localDateTime.HasValue)
        {
            return localDateTime.Value.ToString("f");
        }

        var localDate = NormalizeDateTime(session.Date);
        return localDate?.ToString("D") ?? "Schedule TBD";
    }

}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Wine Surfer Â· Sip Session</title>
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon.png" />
    <link rel="stylesheet" href="/css/wine-surfer-theme.css" />
    <style>
        :root {
            color-scheme: dark;
            --wine-surfer-card-max-width: 960px;
        }

        body {
            margin: 0;
            min-height: 100vh;
            background: var(--wine-app-background);
            color: #f4f1ea;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .wine-surfer-card {
            width: min(100%, var(--wine-surfer-card-max-width));
            max-width: var(--wine-surfer-card-max-width);
        }

        .page-content {
            min-height: 100vh;
            display: flex;
            flex-direction: column;
        }

        .session-main {
            width: min(var(--wine-surfer-card-max-width), 100%);
            margin: 0 auto;
            padding: 120px 32px 96px;
            display: flex;
            flex-direction: column;
            gap: 48px;
            --session-content-max-width: min(var(--wine-surfer-card-max-width), 100%);
        }

        .session-header,
        .bottle-section {
            width: 100%;
            max-width: var(--session-content-max-width);
            margin: 0 auto;
        }

        .session-header {
            display: flex;
            flex-direction: column;
            gap: 18px;
        }

        .session-kicker {
            margin: 0;
            font-size: 12px;
            letter-spacing: 3px;
            text-transform: uppercase;
            color: rgba(244, 241, 234, 0.7);
        }

        .session-title {
            margin: 0;
            font-size: clamp(38px, 5vw, 68px);
            letter-spacing: 10px;
            text-transform: uppercase;
        }

        .session-description {
            margin: 0;
            font-size: 16px;
            line-height: 1.6;
            color: rgba(244, 241, 234, 0.78);
            letter-spacing: 1px;
        }

        .session-meta {
            display: grid;
            grid-template-columns: minmax(220px, 1.2fr) minmax(180px, 1fr);
            gap: 24px;
            margin: 0;
            padding: 0;
            list-style: none;
        }

        .session-meta-item {
            display: flex;
            flex-direction: column;
            gap: 6px;
        }

        .session-meta-item dt {
            margin: 0;
            font-size: 11px;
            letter-spacing: 1.8px;
            text-transform: uppercase;
            color: rgba(244, 241, 234, 0.6);
        }

        .session-meta-item dd {
            margin: 0;
            font-size: 18px;
            letter-spacing: 1.2px;
        }

        .session-body {
            display: flex;
            flex-direction: column;
            gap: 32px;
        }

        .bottle-section {
            display: flex;
            flex-direction: column;
            gap: 18px;
        }

        .bottle-section h2 {
            margin: 0;
            font-size: 20px;
            letter-spacing: 4px;
            text-transform: uppercase;
        }

        .bottle-list {
            list-style: none;
            margin: 0;
            padding: 0;
            display: flex;
            flex-direction: column;
            gap: 14px;
            width: 100%;
        }

        .bottle-list > li {
            width: 100%;
        }

        .bottle-card {
            backdrop-filter: blur(4px);
            display: flex;
            flex-direction: column;
            gap: 18px;
            padding: 28px;
            position: relative;
            transition: transform 160ms ease, box-shadow 160ms ease;
        }

        .session-page.is-authenticated .bottle-card {
            cursor: pointer;
        }

        .session-page.requires-auth .bottle-card {
            cursor: default;
        }

        .session-page.is-authenticated .bottle-card:hover,
        .session-page.is-authenticated .bottle-card:focus-visible {
            transform: translateY(-2px);
            box-shadow: 0 18px 44px rgba(0, 0, 0, 0.45);
        }

        .bottle-card:focus-visible {
            outline: 2px solid rgba(244, 241, 234, 0.85);
            outline-offset: 4px;
        }

        .bottle-name {
            margin: 0;
            font-size: 20px;
            letter-spacing: 4px;
            text-transform: uppercase;
        }

        .bottle-card-header {
            display: flex;
            align-items: baseline;
            justify-content: space-between;
            gap: 12px;
        }

        .bottle-vintage {
            margin: 0;
            font-size: 14px;
            letter-spacing: 3px;
            text-transform: uppercase;
            color: rgba(244, 241, 234, 0.65);
        }

        .bottle-meta {
            display: flex;
            flex-wrap: wrap;
            gap: 24px;
            margin: 0 0 8px;
            padding: 0;
            list-style: none;
        }

        .bottle-meta-item {
            display: flex;
            flex-direction: column;
            gap: 4px;
        }

        .bottle-meta-item dt {
            margin: 0;
            font-size: 11px;
            letter-spacing: 1.6px;
            text-transform: uppercase;
            color: rgba(244, 241, 234, 0.6);
        }

        .bottle-meta-item dd {
            margin: 0;
            font-size: 16px;
            letter-spacing: 1.1px;
        }

        .bottle-note {
            margin: 8px 0 0;
            font-size: 15px;
            letter-spacing: 0.8px;
            line-height: 1.6;
            color: rgba(244, 241, 234, 0.82);
            white-space: pre-wrap;
        }

        .bottle-note--empty {
            color: rgba(244, 241, 234, 0.55);
            font-style: italic;
        }

        .bottle-prompt {
            margin: 6px 0 0;
            font-size: 11px;
            letter-spacing: 2.5px;
            text-transform: uppercase;
            color: rgba(244, 241, 234, 0.55);
        }

        .drink-bottle-error.is-success {
            color: #4ade80;
        }

        .empty-state {
            margin: 0;
            font-size: 14px;
            letter-spacing: 1.4px;
            text-transform: uppercase;
            color: rgba(244, 241, 234, 0.55);
        }

        @@media (max-width: 720px) {
            .session-main {
                padding: 96px 20px 72px;
                gap: 36px;
            }

            .session-title {
                letter-spacing: 6px;
            }

            .session-meta {
                grid-template-columns: 1fr;
            }

            .bottle-card {
                padding: 18px;
            }
        }
    </style>
    <link rel="stylesheet" href="/css/wine-surfer-shadcn.css" />
</head>
@{
    var bodyClass = Model.CurrentUser is null ? "requires-auth" : "is-authenticated";
    var requestPath = Context.Request.Path.HasValue ? Context.Request.Path.Value : string.Empty;
    var requestQuery = Context.Request.QueryString.HasValue ? Context.Request.QueryString.Value : string.Empty;
    var currentLocation = string.Concat(requestPath, requestQuery);
    var topBarModel = WineSurferTopBarModel.CreateFromSisterhoodData(
        currentLocation,
        Model.IncomingInvitations,
        Model.SentInvitationNotifications,
        displayName: Model.CurrentUser?.DisplayName);
    var sisterhoodName = string.IsNullOrWhiteSpace(Model.SisterhoodName) ? "Sisterhood" : Model.SisterhoodName;
    var scheduleLabel = FormatSipSessionSchedule(Model.Session);
    var locationLabel = string.IsNullOrWhiteSpace(Model.Session.Location) ? "Location TBD" : Model.Session.Location;
}
<body class="wine-app session-page @bodyClass">
    <div class="page-content">
        @await Html.PartialAsync("_WineSurferTopBar", topBarModel)
        <main class="session-main">
            <header class="session-header">
                <p class="session-kicker">@sisterhoodName</p>
                <h1 class="session-title">@Model.Session.Name</h1>
                @if (!string.IsNullOrWhiteSpace(Model.Session.Description))
                {
                    <p class="session-description">@Model.Session.Description</p>
                }
                <dl class="session-meta" aria-label="Sip session details">
                    <div class="session-meta-item">
                        <dt>Date &amp; time</dt>
                        <dd>@scheduleLabel</dd>
                    </div>
                    <div class="session-meta-item">
                        <dt>Location</dt>
                        <dd>@locationLabel</dd>
                    </div>
                </dl>
            </header>
            <section class="bottle-section" aria-label="Bottle list">
                <h2>Bottle list</h2>
                @if (Model.Session.Bottles.Count > 0)
                {
                    <ul class="bottle-list">
                        @foreach (var bottle in Model.Session.Bottles)
                        {
                            <li>
                                @await Html.PartialAsync("_BottleCard", bottle, new ViewDataDictionary(ViewData)
                                {
                                    { "IsAuthenticated", Model.CurrentUser is not null }
                                })
                            </li>
                        }
                    </ul>
                }
                else
                {
                    <p class="empty-state">No bottles have been linked to this sip session yet. Gather your cellar and set the bottle list.</p>
                }
            </section>
        </main>
        @if (Model.CurrentUser is not null)
        {
            var drinkModalOptions = new DrinkBottleModalViewModel
            {
                Intro = "Capture how this bottle showed during the session.",
                SubmitLabel = "Drink Bottle",
                FormAction = Url.Action("RateSipSessionBottle", "WineSurfer"),
                IncludeAntiForgeryToken = true,
                ShowDate = false,
                RequireNote = true,
                NoteRows = 5,
                ScoreLabel = "Score (0-10)",
                FormAttributes = new Dictionary<string, string>
                {
                    { "data-sip-session-drink-form", "true" }
                },
                HiddenFields = new List<DrinkBottleModalHiddenField>
                {
                    new DrinkBottleModalHiddenField("SisterhoodId", Model.SisterhoodId.ToString()),
                    new DrinkBottleModalHiddenField("SipSessionId", Model.Session.Id.ToString()),
                    new DrinkBottleModalHiddenField("BottleId"),
                    new DrinkBottleModalHiddenField("NoteId")
                }
            };

            @await Html.PartialAsync("_DrinkBottleModal", drinkModalOptions)
        }
    </div>
    <script src="/js/sip-session.js"></script>
</body>
</html>
