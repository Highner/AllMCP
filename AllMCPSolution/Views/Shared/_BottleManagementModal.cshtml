@model AllMCPSolution.Models.BottleManagementModalViewModel?
@using System
@using System.Collections.Generic
@{ 
    var options = Model ?? BottleManagementModalViewModel.Default;

    var overlayId = string.IsNullOrWhiteSpace(options.OverlayId)
        ? BottleManagementModalViewModel.Default.OverlayId
        : options.OverlayId;
    var dialogId = string.IsNullOrWhiteSpace(options.DialogId)
        ? BottleManagementModalViewModel.Default.DialogId
        : options.DialogId;
    var bodyCssClass = string.IsNullOrWhiteSpace(options.BodyCssClass)
        ? BottleManagementModalViewModel.Default.BodyCssClass
        : options.BodyCssClass;
    var titleElementId = string.IsNullOrWhiteSpace(options.TitleElementId)
        ? BottleManagementModalViewModel.Default.TitleElementId
        : options.TitleElementId;
    var closeButtonAriaLabel = string.IsNullOrWhiteSpace(options.CloseButtonAriaLabel)
        ? BottleManagementModalViewModel.Default.CloseButtonAriaLabel
        : options.CloseButtonAriaLabel;

    var overlayAttributes = options.OverlayAttributes is null
        ? new Dictionary<string, string?>(StringComparer.OrdinalIgnoreCase)
        : new Dictionary<string, string?>(options.OverlayAttributes, StringComparer.OrdinalIgnoreCase);
    if (!overlayAttributes.ContainsKey("hidden"))
    {
        overlayAttributes["hidden"] = null;
    }
    overlayAttributes["aria-hidden"] = "true";
    overlayAttributes["data-bottle-management-overlay"] = "true";

    var dialogAttributes = options.DialogAttributes is null
        ? new Dictionary<string, string?>(StringComparer.OrdinalIgnoreCase)
        : new Dictionary<string, string?>(options.DialogAttributes, StringComparer.OrdinalIgnoreCase);
    dialogAttributes["aria-labelledby"] = titleElementId;
    dialogAttributes["data-bottle-management-modal"] = "true";

    var bodyAttributes = options.BodyAttributes is null
        ? new Dictionary<string, string?>(StringComparer.OrdinalIgnoreCase)
        : new Dictionary<string, string?>(options.BodyAttributes, StringComparer.OrdinalIgnoreCase);
    bodyAttributes["data-bottle-management-body"] = "true";

    var closeAttributes = new Dictionary<string, string?>(StringComparer.OrdinalIgnoreCase)
    {
        ["data-bottle-management-close"] = null
    };

    var modal = new WineSurferModalShell
    {
        BackdropId = overlayId,
        BackdropCssClass = string.IsNullOrWhiteSpace(options.OverlayCssClass)
            ? BottleManagementModalViewModel.Default.OverlayCssClass
            : options.OverlayCssClass,
        BackdropAttributes = overlayAttributes,
        DialogId = dialogId,
        DialogCssClass = string.IsNullOrWhiteSpace(options.DialogCssClass)
            ? BottleManagementModalViewModel.Default.DialogCssClass
            : options.DialogCssClass,
        DialogAttributes = dialogAttributes,
        HeaderCssClass = "wine-surfer-modal__header bottle-management-modal__header",
        Title = "Manage bottles",
        TitleCssClass = "wine-surfer-modal__title bottle-management-modal__title",
        TitleElementId = titleElementId,
        BodyCssClass = bodyCssClass,
        BodyAttributes = bodyAttributes,
        CloseButtonCssClass = "wine-surfer-modal__close bottle-management-modal__close",
        CloseButtonLabel = closeButtonAriaLabel,
        CloseButtonAttributes = closeAttributes,
        BodyContent = @<section class="bottle-management" data-bottle-management-root>
            <input type="hidden" value="" data-bottle-management-vintage-id />
            <header class="bottle-management-summary" aria-live="polite">
                <h3 class="bottle-management-wine" data-bottle-management-wine>Choose a wine</h3>
                <p class="bottle-management-meta">
                    <span data-bottle-management-vintage>Vintage —</span>
                    <span class="bottle-management-meta-separator" aria-hidden="true">•</span>
                    <span data-bottle-management-count>Bottles: 0</span>
                    <span class="bottle-management-meta-separator" aria-hidden="true">•</span>
                    <span data-bottle-management-status>Status: —</span>
                    <span class="bottle-management-meta-separator" aria-hidden="true">•</span>
                    <span data-bottle-management-average>Avg. score: —</span>
                </p>
            </header>
            <p class="bottle-management-error" data-bottle-management-error aria-live="assertive" hidden></p>
            @if (options.HeaderContent is not null)
            {
                @options.HeaderContent(null)
            }
            <section class="bottle-management-table-section">
                <header class="bottle-management-table-header">
                    <h4 class="bottle-management-table-title">Your bottles</h4>
                </header>
                <div class="bottle-management-table-container">
                    <table class="crud-table__table bottle-management-table" data-bottle-management-table>
                        <caption class="sr-only">Bottles for the selected wine vintage</caption>
                        <thead>
                            <tr class="crud-table__header-row">
                                <th scope="col" class="bottle-management-col-location">Location</th>
                                <th scope="col" class="bottle-management-col-price">Price</th>
                                <th scope="col" class="bottle-management-col-score">Score</th>
                                <th scope="col" class="bottle-management-col-status">Drunk</th>
                            </tr>
                        </thead>
                        <tbody data-bottle-management-rows>
                            <tr class="empty-row"><td colspan="4">Select a wine to view your bottles.</td></tr>
                        </tbody>
                    </table>
                </div>
            </section>
        </section>
    };
}

@await Html.PartialAsync("_WineSurferModalShell", modal)
<script src="/js/bottle-management-modal.js" defer></script>
