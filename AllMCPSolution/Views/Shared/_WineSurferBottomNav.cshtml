@using System.Linq
@using AllMCPSolution.Controllers
@model string?
@{
    var rawPath = Model;
    if (string.IsNullOrWhiteSpace(rawPath))
    {
        rawPath = Context?.Request?.Path.Value ?? string.Empty;
    }

    var normalizedPath = string.IsNullOrWhiteSpace(rawPath)
        ? string.Empty
        : rawPath!.TrimEnd('/');

    if (string.IsNullOrEmpty(normalizedPath) && !string.IsNullOrEmpty(rawPath))
    {
        normalizedPath = "/";
    }

    var isAuthenticated = User?.Identity?.IsAuthenticated == true;
    var topBarModel = ViewData?["WineSurferTopBarModel"] as WineSurferTopBarModel;
    var isAdmin = topBarModel?.IsAdmin == true;

    var navItems = new (string Href, string Label, bool RequiresAuthentication, bool RequiresAdmin, string IconKey)[]
    {
        ("/", "Home", false, false, "home"),
        ("/wine-manager", "Inventory", false, false, "inventory"),
        ("/wine-surfer/surf-eye", "Surf Eye", true, false, "surf-eye"),
        ("/wine-surfer/taste-profile", "Taste Profile", true, false, "taste-profile"),
        ("/wine-surfer/wine-waves", "Wine Waves", true, true, "wine-waves"),
        ("/wine-surfer/sisterhoods", "Sisterhoods", false, false, "sisterhoods"),
        ("/wine-surfer/wishlists", "Wishlists", true, false, "wishlists")
    };

    var visibleItems = navItems
        .Where(item => (isAuthenticated || !item.RequiresAuthentication) && (isAdmin || !item.RequiresAdmin))
        .ToList();
}

@if (visibleItems.Count > 0)
{
    <nav class="wine-surfer-bottom-nav" aria-label="Wine Surfer sections">
        <ul class="bottom-nav__list">
            @foreach (var item in visibleItems)
            {
                var normalizedHref = string.IsNullOrWhiteSpace(item.Href)
                    ? "/"
                    : item.Href.TrimEnd('/');

                if (string.IsNullOrEmpty(normalizedHref))
                {
                    normalizedHref = "/";
                }

                var isActive = string.Equals(normalizedHref, normalizedPath, StringComparison.OrdinalIgnoreCase);
                var linkClasses = "bottom-nav__link" + (isActive ? " bottom-nav__link--active" : string.Empty);

                <li class="bottom-nav__item">
                    <a class="@linkClasses" href="@Url.Content(item.Href)" aria-current="@(isActive ? "page" : null)" aria-label="@item.Label">
                        <span class="bottom-nav__icon" aria-hidden="true">
                            @switch (item.IconKey)
                            {
                                case "home":
                                    <svg viewBox="0 0 24 24" role="presentation" focusable="false">
                                        <path d="M3 11.5 12 4l9 7.5"></path>
                                        <path d="M5 10v10h14V10"></path>
                                        <path d="M10 17h4"></path>
                                    </svg>
                                    break;
                                case "inventory":
                                    <svg viewBox="0 0 24 24" role="presentation" focusable="false">
                                        <rect x="4" y="4" width="16" height="16" rx="2"></rect>
                                        <path d="M9 8h8"></path>
                                        <path d="M9 12h8"></path>
                                        <path d="M9 16h8"></path>
                                        <circle cx="7" cy="8" r="1"></circle>
                                        <circle cx="7" cy="12" r="1"></circle>
                                        <circle cx="7" cy="16" r="1"></circle>
                                    </svg>
                                    break;
                                case "surf-eye":
                                    <svg viewBox="0 0 24 24" role="presentation" focusable="false">
                                        <path d="M2 12s3-6 10-6 10 6 10 6-3 6-10 6S2 12 2 12Z"></path>
                                        <circle cx="12" cy="12" r="3"></circle>
                                        <path d="M4 18c2-1.4 4.5-2.2 8-2.2s6 0.8 8 2.2"></path>
                                    </svg>
                                    break;
                                case "taste-profile":
                                    <svg viewBox="0 0 24 24" role="presentation" focusable="false">
                                        <path d="M8 4h8l-1 6c-.3 2-1.9 3.4-3.8 3.9V17h2v2H9v-2h2v-3.1c-1.9-.5-3.5-1.9-3.8-3.9L8 4Z"></path>
                                        <path d="M9 8h6"></path>
                                    </svg>
                                    break;
                                case "wine-waves":
                                    <svg viewBox="0 0 24 24" role="presentation" focusable="false">
                                        <path d="M3 15q2-3 4 0t4 0 4 0 4 0"></path>
                                        <path d="M3 19q2-3 4 0t4 0 4 0 4 0"></path>
                                        <path d="M10 5l2-2 2 2"></path>
                                    </svg>
                                    break;
                                case "sisterhoods":
                                    <svg viewBox="0 0 24 24" role="presentation" focusable="false">
                                        <circle cx="8" cy="10" r="3"></circle>
                                        <circle cx="16" cy="10" r="3"></circle>
                                        <path d="M4.5 20c0-2.6 1.9-4.5 3.8-4.5h3.4"></path>
                                        <path d="M12.3 15.5h1.5c1.9 0 3.7 1.9 3.7 4.5"></path>
                                    </svg>
                                    break;
                                case "wishlists":
                                    <svg viewBox="0 0 24 24" role="presentation" focusable="false">
                                        <path d="M12 21s-6-4.5-6-9a4 4 0 0 1 7-2.6A4 4 0 0 1 18 12c0 4.5-6 9-6 9Z"></path>
                                    </svg>
                                    break;
                                default:
                                    <svg viewBox="0 0 24 24" role="presentation" focusable="false">
                                        <path d="M12 21s-6-4.5-6-9a4 4 0 0 1 7-2.6A4 4 0 0 1 18 12c0 4.5-6 9-6 9Z"></path>
                                    </svg>
                                    break;
                            }
                        </span>
                        <span class="sr-only">@item.Label</span>
                    </a>
                </li>
            }
        </ul>
    </nav>
}
