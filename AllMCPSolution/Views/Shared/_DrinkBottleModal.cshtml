@model AllMCPSolution.Models.DrinkBottleModalViewModel
@using System.Text.Encodings.Web
@using AllMCPSolution.Models
@{ 
    var options = Model ?? DrinkBottleModalViewModel.Default;
    var defaultDateValue = DateTime.Today.ToString("yyyy-MM-dd");
    var overlayId = string.IsNullOrWhiteSpace(options.OverlayId)
        ? DrinkBottleModalViewModel.Default.OverlayId
        : options.OverlayId;
    var popoverId = string.IsNullOrWhiteSpace(options.PopoverId)
        ? DrinkBottleModalViewModel.Default.PopoverId
        : options.PopoverId;
    var titleId = string.IsNullOrWhiteSpace(options.TitleElementId)
        ? DrinkBottleModalViewModel.Default.TitleElementId
        : options.TitleElementId;
    var formMethod = string.IsNullOrWhiteSpace(options.FormMethod) ? "get" : options.FormMethod;
    var formAction = string.IsNullOrWhiteSpace(options.FormAction) ? null : options.FormAction;
    var encoder = HtmlEncoder.Default;
    var formAttributes = options.FormAttributes ?? new Dictionary<string, string>();
    var attributeString = formAttributes.Count > 0
        ? " " + string.Join(" ", formAttributes.Select(attr => $"{attr.Key}=\"{encoder.Encode(attr.Value)}\""))
        : string.Empty;
    var hiddenFields = options.HiddenFields ?? Array.Empty<DrinkBottleModalHiddenField>();
    var introText = options.Intro ?? string.Empty;
    var submitLabel = string.IsNullOrWhiteSpace(options.SubmitLabel)
        ? DrinkBottleModalViewModel.Default.SubmitLabel
        : options.SubmitLabel;
    var cancelLabel = string.IsNullOrWhiteSpace(options.CancelLabel)
        ? DrinkBottleModalViewModel.Default.CancelLabel
        : options.CancelLabel;
    var noteRows = options.NoteRows > 0 ? options.NoteRows : DrinkBottleModalViewModel.Default.NoteRows;
    var scoreDisplayId = $"{popoverId}-score-display";
    var scoreTicksId = $"{popoverId}-score-ticks";
    var noteOnlyMessageId = $"{popoverId}-note-only-message";
    var submitButtonCssClass = "crud-table__action-button drink-bottle-submit" +
        (string.IsNullOrWhiteSpace(options.SubmitButtonCssClass) ? string.Empty : $" {options.SubmitButtonCssClass}");
    var cancelButtonCssClass = "crud-table__action-button drink-bottle-cancel" +
        (string.IsNullOrWhiteSpace(options.CancelButtonCssClass) ? " secondary" : $" {options.CancelButtonCssClass}");

    var modal = new WineSurferModalShell
    {
        BackdropId = overlayId,
        BackdropCssClass = "inventory-add-overlay wine-surfer-modal-backdrop drink-bottle-overlay",
        BackdropAttributes = new Dictionary<string, string?>
        {
            ["hidden"] = null,
            ["aria-hidden"] = "true"
        },
        DialogId = popoverId,
        DialogCssClass = "inventory-add-popover drink-bottle-popover wine-surfer-modal",
        DialogAttributes = new Dictionary<string, string?>
        {
            ["aria-labelledby"] = titleId
        },
        HeaderCssClass = "wine-surfer-modal__header drink-bottle-modal__header",
        Title = string.IsNullOrWhiteSpace(options.Title)
            ? DrinkBottleModalViewModel.Default.Title
            : options.Title!,
        TitleCssClass = "wine-surfer-modal__title drink-bottle-title",
        TitleElementId = titleId,
        BodyCssClass = "wine-surfer-modal__body drink-bottle-modal__body",
        CloseButtonCssClass = "wine-surfer-modal__close drink-bottle-modal__close",
        CloseButtonLabel = "Close tasting note dialog",
        CloseButtonAttributes = new Dictionary<string, string?>
        {
            ["data-drink-bottle-close"] = null
        },
        BodyContent = @<form class="drink-bottle-form @options.FormCssClass" method="@formMethod"@((formAction is null ? string.Empty : $" action=\"{encoder.Encode(formAction)}\""))@Html.Raw(attributeString)>
            @if (options.IncludeAntiForgeryToken)
            {
                @Html.AntiForgeryToken()
            }
            @foreach (var hidden in hiddenFields)
            {
                var hiddenAttributes = hidden.Attributes ?? new Dictionary<string, string>();
                var hiddenAttributeString = hiddenAttributes.Count > 0
                    ? " " + string.Join(" ", hiddenAttributes.Select(attr => $"{attr.Key}=\"{encoder.Encode(attr.Value)}\""))
                    : string.Empty;
                <input type="hidden" name="@hidden.Name" value="@(hidden.Value ?? string.Empty)"@Html.Raw(hiddenAttributeString) />
            }
            @if (!string.IsNullOrWhiteSpace(introText))
            {
                <p class="inventory-add-intro drink-bottle-intro">@introText</p>
            }
            @if (options.ShowDate)
            {
                <label class="inventory-add-field drink-bottle-date-field">
                    <span class="inventory-add-label">@options.DateLabel</span>
                    <input type="date" class="drink-bottle-date" value="@defaultDateValue" aria-label="@options.DateInputAriaLabel" @(options.RequireDate ? "required" : null) />
                </label>
            }
            else
            {
                <input type="hidden" class="drink-bottle-date" value="@defaultDateValue" />
            }
            <p id="@noteOnlyMessageId" class="drink-bottle-note-only-message" hidden></p>
            @if (options.ShowScore)
            {
                <label class="inventory-add-field drink-bottle-score-field">
                    <span class="inventory-add-label">@options.ScoreLabel</span>
                    <div class="drink-bottle-score-control">
                        <input type="range"
                               class="drink-bottle-score"
                               min="0"
                               max="10"
                               step="0.1"
                               value="5"
                               list="@scoreTicksId"
                               aria-label="@options.ScoreInputAriaLabel"
                               aria-describedby="@scoreDisplayId"
                               data-default-value="5"
                               data-has-value="false" />
                        <div class="drink-bottle-score-meta">
                            <span id="@scoreDisplayId" class="drink-bottle-score-display" aria-live="polite">Not rated</span>
                            <button type="button" class="drink-bottle-score-clear" aria-label="Clear score">Clear</button>
                        </div>
                    </div>
                    <datalist id="@scoreTicksId">
                        <option value="0">0</option>
                        <option value="5">5</option>
                        <option value="10">10</option>
                    </datalist>
                </label>
            }
            else
            {
                <input type="hidden" class="drink-bottle-score" />
            }
            <label class="inventory-add-field">
                <span class="inventory-add-label">@options.NoteLabel</span>
                <textarea class="drink-bottle-note" rows="@noteRows" aria-label="@options.NoteInputAriaLabel" @(options.RequireNote ? "required" : null)></textarea>
            </label>
            <p class="inventory-add-error drink-bottle-error" role="alert" aria-hidden="true"></p>
            <div class="inventory-add-actions drink-bottle-actions">
                <button type="button" class="@cancelButtonCssClass">@cancelLabel</button>
                <button type="submit" class="@submitButtonCssClass">@submitLabel</button>
            </div>
        </form>
    };
}
@await Html.PartialAsync("_WineSurferModalShell", modal)
