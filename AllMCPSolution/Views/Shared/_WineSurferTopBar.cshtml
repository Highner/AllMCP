@using System.Linq
@model string

@{
    var navItems = new (string Href, string Label)[]
    {
        ("/wine-surfer", "Home"),
        ("/wine-surfer/sisterhoods", "Sisterhoods"),
        ("/wine-manager", "Wine Inventory")
    };

    var currentPath = string.IsNullOrWhiteSpace(Model)
        ? string.Empty
        : Model.TrimEnd('/');

    if (string.IsNullOrEmpty(currentPath) && !string.IsNullOrEmpty(Model))
    {
        currentPath = "/";
    }

    var visibleNavItems = navItems
        .Where(item => !string.Equals(item.Href, currentPath, System.StringComparison.OrdinalIgnoreCase))
        .ToList();

    var userDisplayName = User?.Identity?.IsAuthenticated == true
        ? User.Identity?.Name ?? string.Empty
        : string.Empty;

    var avatarLetter = "?";

    if (!string.IsNullOrWhiteSpace(userDisplayName))
    {
        var trimmedUserName = userDisplayName.Trim();
        if (!string.IsNullOrEmpty(trimmedUserName))
        {
            avatarLetter = trimmedUserName.Substring(0, 1).ToUpperInvariant();
        }
    }

    var avatarLabel = string.IsNullOrWhiteSpace(userDisplayName)
        ? "Guest avatar"
        : $"User avatar for {userDisplayName}";
}

<header class="top-bar">
    <a class="brand" href="/wine-surfer">Wine Surfer</a>
    <div class="top-bar-actions">
        <span class="top-bar-avatar" role="img" aria-label="@avatarLabel">@avatarLetter</span>
        <button id="menuToggle" class="burger" type="button" aria-expanded="false" aria-controls="menuPanel">
            <span></span>
        </button>
    </div>
    <nav id="menuPanel" class="menu-panel" aria-hidden="true">
        @if (visibleNavItems.Count > 0)
        {
            <div class="menu-links">
                @foreach (var item in visibleNavItems)
                {
                    <a href="@item.Href">@item.Label</a>
                }
            </div>
            <div class="menu-divider" aria-hidden="true"></div>
        }
        <button id="authToggle" class="auth-toggle" type="button" data-auth-state="login">Log in</button>
    </nav>
</header>
<script>
    (() => {
        const toggle = document.getElementById('menuToggle');
        const panel = document.getElementById('menuPanel');

        if (!toggle || !panel) {
            return;
        }

        const closeMenu = () => {
            toggle.classList.remove('active');
            toggle.setAttribute('aria-expanded', 'false');
            panel.classList.remove('open');
            panel.setAttribute('aria-hidden', 'true');
        };

        toggle.addEventListener('click', () => {
            const isOpen = toggle.classList.toggle('active');
            toggle.setAttribute('aria-expanded', String(isOpen));
            panel.classList.toggle('open', isOpen);
            panel.setAttribute('aria-hidden', String(!isOpen));
        });

        panel.querySelectorAll('a, button').forEach(element => {
            element.addEventListener('click', () => {
                closeMenu();
            });
        });

        document.addEventListener('click', (event) => {
            if (!panel.contains(event.target) && event.target !== toggle) {
                closeMenu();
            }
        });

        document.addEventListener('keydown', (event) => {
            if (event.key === 'Escape') {
                closeMenu();
            }
        });
    })();
</script>
