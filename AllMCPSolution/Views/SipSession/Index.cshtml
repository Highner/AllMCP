@model AllMCPSolution.Controllers.WineSurferSipSessionDetailViewModel
@using AllMCPSolution.Controllers

@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Wine Surfer Â· Sip Session</title>
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon.png" />
    <link rel="manifest" href="/manifest.json" />
    <meta name="theme-color" content="#050505" />
    <link rel="stylesheet" href="/css/wine-surfer-theme.css" />
    <link rel="stylesheet" href="/css/wine-surfer-shadcn.css" />
    <script defer src="/js/pwa.js"></script>
    <style>
        :root {
            color-scheme: dark;
        }

        body {
            margin: 0;
            min-height: 100vh;
            background: var(--wine-app-background);
            color: hsl(var(--foreground));
            font-family: var(--font-sans, 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif);
            display: flex;
            flex-direction: column;
        }

        .page-content {
            flex: 1;
            display: flex;
            flex-direction: column;
        }

        .session-main {
            flex: 1;
        }
    </style>
</head>
@{
    var bodyClass = Model.CurrentUser is null ? "requires-auth" : "is-authenticated";
    var requestPath = Context.Request.Path.HasValue ? Context.Request.Path.Value : string.Empty;
    var requestQuery = Context.Request.QueryString.HasValue ? Context.Request.QueryString.Value : string.Empty;
    var currentLocation = string.Concat(requestPath, requestQuery);
    var topBarModel = (ViewData["WineSurferTopBarModel"] as WineSurferTopBarModel)
        ?? WineSurferTopBarModel.CreateFromSisterhoodData(
            currentLocation,
            Model.IncomingInvitations,
            Model.SentInvitationNotifications,
            displayName: Model.CurrentUser?.DisplayName,
            isAdmin: Model.CurrentUser?.IsAdmin == true);
    var pageTitle = string.IsNullOrWhiteSpace(Model.Session?.Name)
        ? "Sip Session"
        : Model.Session!.Name!.Trim();
    ViewData["WineSurferPageTitle"] = pageTitle;
}
<body class="wine-app session-page @bodyClass">
    <div class="page-content">
        @await Html.PartialAsync("_WineSurferTopBar", topBarModel)
        <main class="session-main" aria-label="Sip session workspace"></main>
    </div>
    <script defer src="/js/sip-session.js"></script>
</body>
</html>
